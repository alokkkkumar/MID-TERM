#include <iostream>
#include <cmath>

class Solution {
public:
    int countNumbersWithUniqueDigits(int n) {
        if (n == 0) {
            return 1;
        }
        if (n == 1) {
            return 10;
        }
        if (n > 10) {
            n = 10;
        }

        int totalCount = 10; // For n=0 and n=1
        int uniqueDigits = 9;
        int availableNumber = 9;
        int currentCount = 9;

        for (int i = 2; i <= n; ++i) {
            if (availableNumber > 0) {
                currentCount = currentCount * availableNumber;
                totalCount += currentCount;
                availableNumber--;
            } else {
                break;
            }
        }
        return totalCount;
    }
};

int main() {
    Solution sol;
    std::cout << "n = 0: " << sol.countNumbersWithUniqueDigits(0) << std::endl; // Output: 1
    std::cout << "n = 1: " << sol.countNumbersWithUniqueDigits(1) << std::endl; // Output: 10
    std::cout << "n = 2: " << sol.countNumbersWithUniqueDigits(2) << std::endl; // Output: 91
    std::cout << "n = 3: " << sol.countNumbersWithUniqueDigits(3) << std::endl; // Output: 739
    std::cout << "n = 10: " << sol.countNumbersWithUniqueDigits(10) << std::endl; // Output: 8877691
    std::cout << "n = 11: " << sol.countNumbersWithUniqueDigits(11) << std::endl; // Output: 8877691
    return 0;
}
