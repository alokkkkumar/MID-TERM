#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void nextPermutation(vector<int>& nums) {
    int n = nums.size();
    if (n <= 1) {
        return;
    }

    int i = n - 2;
    while (i >= 0 && nums[i] >= nums[i + 1]) {
        i--;
    }

    if (i < 0) {
        reverse(nums.begin(), nums.end());
    } else {
        int j = n - 1;
        while (nums[j] <= nums[i]) {
            j--;
        }
        swap(nums[i], nums[j]);
        reverse(nums.begin() + i + 1, nums.end());
    }
}

int main() {
    vector<int> nums1 = {1, 2, 3};
    nextPermutation(nums1);
    cout << "Next permutation of [1, 2, 3]: ";
    for (int num : nums1) {
        cout << num << " ";
    }
    cout << endl; // Output: 1 3 2

    vector<int> nums2 = {3, 2, 1};
    nextPermutation(nums2);
    cout << "Next permutation of [3, 2, 1]: ";
    for (int num : nums2) {
        cout << num << " ";
    }
    cout << endl; // Output: 1 2 3

    vector<int> nums3 = {1, 1, 5};
    nextPermutation(nums3);
    cout << "Next permutation of [1, 1, 5]: ";
    for (int num : nums3) {
        cout << num << " ";
    }
    cout << endl; // Output: 1 5 1

    vector<int> nums4 = {1, 3, 2};
    nextPermutation(nums4);
    cout << "Next permutation of [1, 3, 2]: ";
    for (int num : nums4) {
        cout << num << " ";
    }
    cout << endl; // Output: 2 1 3

    return 0;
}
