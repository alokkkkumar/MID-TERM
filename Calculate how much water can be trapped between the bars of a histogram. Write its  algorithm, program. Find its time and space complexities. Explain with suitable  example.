#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int trappingWater(const vector<int>& height) {
    int n = height.size();
    if (n <= 2) {
        return 0;
    }

    int left = 0;
    int right = n - 1;
    int leftMax = 0;
    int rightMax = 0;
    int totalWater = 0;

    while (left < right) {
        if (height[left] < height[right]) {
            if (height[left] >= leftMax) {
                leftMax = height[left];
            } else {
                totalWater += leftMax - height[left];
            }
            left++;
        } else {
            if (height[right] >= rightMax) {
                rightMax = height[right];
            } else {
                totalWater += rightMax - height[right];
            }
            right--;
        }
    }

    return totalWater;
}

int main() {
    vector<int> height1 = {0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1};
    cout << "Trapped water in height1: " << trappingWater(height1) << endl; // Output: 6

    vector<int> height2 = {4, 2, 0, 3, 2, 5};
    cout << "Trapped water in height2: " << trappingWater(height2) << endl; // Output: 9

    vector<int> height3 = {2, 0, 2};
    cout << "Trapped water in height3: " << trappingWater(height3) << endl; // Output: 2

    vector<int> height4 = {3, 0, 0, 2, 0, 4};
    cout << "Trapped water in height4: " << trappingWater(height4) << endl; // Output: 10

    vector<int> height5 = {5, 4, 1, 2};
    cout << "Trapped water in height5: " << trappingWater(height5) << endl; // Output: 1

    return 0;
}
